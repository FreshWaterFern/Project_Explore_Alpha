<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_water_still</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>obj_water_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0.25;
alarm[1]=7;
active = false;
fishing = false;
destroy_obj = false;

if ( global.save_loading == false )
{
x -= 64;
y -= 64;
}
world_obj_add(id);

bobber_x = x;
bobber_y = y;

ai_grid_add_self(x,y,x+(sprite_width),y+(sprite_height));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Clear Objects In The Way
var world_x = x+64;
var world_y = y+64;
var inst = 0;
        repeat(10)
        {
        inst = instance_nearest(world_x,world_y,obj_world_tree_1);
        if ( inst != noone )
        {
        if ( collision_rectangle(x,y,x+128,y+128,inst,false,true) )
        {
            with(inst){instance_destroy();}
        }
        }
        inst = instance_nearest(world_x,world_y,obj_world_rock_1);
        if ( inst != noone )
        {
        if ( collision_rectangle(x,y,x+128,y+128,inst,false,true) )
        {
            with(inst){instance_destroy();}
        }
        }
        inst = instance_nearest(world_x,world_y,obj_world_rock_2);
        if ( inst != noone )
        {
        if ( collision_rectangle(x,y,x+128,y+128,inst,false,true) )
        {
            with(inst){instance_destroy();}
        }
        }
        inst = instance_nearest(world_x,world_y,obj_solid_ai_parent);
        if ( inst != noone )
        {
        if ( collision_rectangle(x+18,y+18,x+110,y+110,inst,false,true) )
        {
            with(inst){instance_destroy();}
        }
        }
        inst = instance_nearest(world_x,world_y,obj_detail_parent);
        if ( inst != noone )
        {
        if ( collision_rectangle(x,y,x+128,y+128,inst,false,true) )
        {
            with(inst){instance_destroy();}
        }
        }
        inst = instance_nearest(world_x,world_y,obj_detail_parent);
        if ( inst != noone )
        {
        if ( collision_rectangle(x,y,x+128,y+128,inst,false,true) )
        {
            with(inst){instance_destroy();}
        }
        }
        inst = instance_nearest(world_x,world_y,obj_item_dropped);
        if ( inst != noone )
        {
        if ( collision_rectangle(x,y,x+128,y+128,inst,false,true) )
        {
            with(inst){instance_destroy();}
        }
        }
        }
        
alarm[1]=60;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Object Activity

if ( point_distance(x,y,obj_player.x,obj_player.y) &lt; 1400 or global.render_world_map == true )
{
active = true;
}
else
{
active = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Fishing script
if ( fishing == true &amp;&amp; global.fishing_water_id == id )
{
    // Chance of catching fish
    var catch_chance = round(random_range(0,400*global.fishing_multiplier));
    {
        if ( catch_chance &gt;= 247 &amp;&amp; catch_chance &lt;= 250 )
        {
        fish_type = choose("Trout","Seabass","Halibut","PinkSalmon","Rare Drop");
        var inst = instance_create(x+64,y+96,obj_popup_resourcegain);
        inst.text = "+1 "+string(fish_type);
        inst.v_color = c_white;
        fishing = false;
        global.ss_fishcaught = steam_get_stat_int("fish_caught");
        global.ss_fishcaught ++;
        steam_set_stat_int("fish_caught",global.ss_fishcaught);
        global.fishing_multiplier ++;
        global.fish_caught ++;
        switch(fish_type)
        {
        case "Trout":
        {inventory_add(73,1,false);break;}
        case "Seabass":
        {inventory_add(75,1,false);break;}
        case "Halibut":
        {inventory_add(76,1,false);break;}
        case "PinkSalmon":
        {inventory_add(77,1,false);break;}
        case "Rare Drop":
        {if(irandom(3) == 2){inventory_add(world_get_item(7),1,false);}else{inventory_add(world_get_item(6),1,false);}break;}
        }
        }
    }
    if ( point_distance(x+64,y+64,obj_player.x,obj_player.y) &gt; 128 )
    {
    fishing = false;
    }
}
else
{
fishing = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Render

if ( active == true )
{
draw_set_alpha(1);
draw_set_color(c_white);
draw_sprite(spr_water_still,image_index,x,y);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Fishing script
if ( fishing == true )
{
    draw_set_alpha(1);
    draw_set_color(c_red);
    draw_circle(bobber_x+64,bobber_y+64,4,false);
    draw_set_color(c_white);
    draw_circle(bobber_x+64,bobber_y+64,2,false);
    draw_set_color(c_black);
    draw_circle(bobber_x+64,bobber_y+64,4,true);
    var length_dirx = obj_player.x+lengthdir_x(26,obj_player.image_angle+90);
    var length_diry = obj_player.y+lengthdir_y(26,obj_player.image_angle+90);
    draw_line_width(bobber_x+64,bobber_y+64,length_dirx,length_diry,2);
    bobber_x += random_range(-0.5,0.5);
    bobber_y += random_range(-0.5,0.5);
    // Keep bobber in water
    if ( bobber_x &gt; x+124 )
    {
        bobber_x --;
    }
    if ( bobber_x &lt; x+4 )
    {
        bobber_x ++;
    }
    if ( bobber_y &gt; y+124 )
    {
        bobber_y --;
    }
    if ( bobber_y &lt; y+4 )
    {
        bobber_y ++;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>64,64</point>
  </PhysicsShapePoints>
</object>
