<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize
selected = false;
obj_type = 0;
sprite=0;
spr_height = 0;
img_index=0;
growth_rate = 0;
plant_id = 0;
plant_state = 1;
can_grow = false;
plant_final_state = 0;
str1 = "";str2 = "";
growth_multi = 1;
depth = -y+128;

item_drop = 0;
item_drop_count = 0;
item_final_drop = 0;
item_final_drop_count = 0;
item_drop_random_min = 0;
item_drop_random_max = 0;
item_final_drop_random_min = 0;
item_final_drop_random_max = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Destroy Object Script
/*
ds_list_delete(global.w_plants_id,index);
ds_list_delete(global.w_plants_type,index);
ds_list_delete(global.w_plants_state,index);

var inst = 0;

switch(plant_type)
{
case 0:{
if ( plant_state &gt;= plant_final_state ){inst = instance_create(x,y,obj_item_dropped);
inst.item_id = 124;inst.item_stack = 1;repeat(irandom(3)+1){
if ( irandom(7)==1 ){
inst = instance_create(x,y,obj_item_dropped);inst.item_id = 124;inst.item_stack = 1;}}}
else
{
inst = instance_create(x,y,obj_item_dropped);
inst.item_id = 124;inst.item_stack = 1;
}
if ( plant_state &gt;= plant_final_state ){
inst = instance_create(x,y,obj_item_dropped);
inst.item_id = 125;inst.item_stack = 1;
inst.item_stack = irandom(2)+1;}break;}

case 1:{
if ( plant_state &gt;= plant_final_state ){inst = instance_create(x,y,obj_item_dropped);
inst.item_id = 126;inst.item_stack = 1;repeat(irandom(2)+1){
if ( irandom(7)==1 ){
inst = instance_create(x,y,obj_item_dropped);inst.item_id = 126;inst.item_stack = 1;}}}
else
{
inst = instance_create(x,y,obj_item_dropped);
inst.item_id = 126;inst.item_stack = 1;
}
break;}

case 2:{
if ( plant_state &gt;= plant_final_state ){inst = instance_create(x,y,obj_item_dropped);
inst.item_id = 132;inst.item_stack = 1;repeat(irandom(2)+1){
if ( irandom(7)==1 ){
inst = instance_create(x,y,obj_item_dropped);inst.item_id = 132;inst.item_stack = 1;}}}
else
{
inst = instance_create(x,y,obj_item_dropped);
inst.item_id = 132;inst.item_stack = 1;
}
if ( plant_state &gt;= plant_final_state ){
inst = instance_create(x,y,obj_item_dropped);inst.item_id = 131;
inst.item_stack = irandom(2)+1;}break;}

}
world_obj_delete(id);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update Plant World Data Structure
/*
alarm[0]=5;
index = ds_list_find_index(global.w_plants_id,id);
global.w_plants_type[| index] = plant_type;
global.w_plants_state[| index] = plant_state;
world_obj_update(id);

switch(plant_type)
{
case 0:
{plant_final_state=20;growth_multi=0.75;break;}
case 1:
{plant_final_state=10;growth_multi=0.35;break;}
case 2:
{plant_final_state=12;growth_multi=0.25;break;}
}

event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Prepare Rendering
sprite = ds_list_find_value(global.item_data[#plant_id,2],floor(plant_state));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update State

if ( plant_state &lt; plant_final_state ){
plant_state += growth_rate*20;}

// Check For Mouse
selected = false;
var set_y = y+(spr_height/2);
if ( obj_player.v_item_equipped &lt;= 0 &amp;&amp; global.render_gui_page == "none" )
{
if ( mouse_x &gt; x - 16 &amp;&amp; mouse_x &lt; x + 16 &amp;&amp; mouse_y &gt; set_y - 16 &amp;&amp; mouse_y &lt; set_y + 16 )
{
        if ( point_distance(x,set_y,obj_player.x,obj_player.y) &lt; 96 )
        {
        selected = true;
        if ( (mouse_check_button_pressed(mb_left) &amp;&amp; keyboard_check(vk_shift) == false) or (mouse_check_button(mb_left) &amp;&amp; keyboard_check(vk_shift) == true) )
        {
        audio_play_sound(snd_click03,4,false);
        instance_create(x,y,obj_dirt_pop1); // Cute little poopy popper effect (boop)
        // Item drops, including possible random variation
        if ( plant_state &gt;= plant_final_state ){
        if ( item_final_drop_random_min &gt; 0 ){object_item_drop(x,set_y,item_final_drop,floor(random_range(item_final_drop_random_min,item_final_drop_random_max)));}
        else{object_item_drop(x,set_y,item_final_drop,1);}
        }else{
        if ( item_drop_random_min &gt; 0 ){object_item_drop(x,set_y,item_drop,floor(random_range(item_drop_random_min,item_drop_random_max)));}
        else{object_item_drop(x,set_y,item_drop,1);}
        }
        instance_destroy();
        }}
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Get Surface Type
var i = round(x/128);
var r = round(y/128);
var surface_type = ds_grid_get(global.world_tiles,i,r);
switch(surface_type)
    {
        case 0:{
        can_grow = true;break;}
        case 1:{
        can_grow = true;break;}
        case 4:{
        can_grow = true;break;}
        case 9:{
        can_grow = true;break;}
        case 10:{
        can_grow = true;break;}
        default:{
        instance_destroy();break;}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
