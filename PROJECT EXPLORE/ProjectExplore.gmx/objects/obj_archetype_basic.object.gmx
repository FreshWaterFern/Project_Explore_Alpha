<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_solid_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize
active = true;
selected = false;
str1 = "";str2 = "";
destroy_obj = false;
mouse_frames = 0;
obj_name = "";
texture = 0;
type = 0;
rot = 0;
is_3d = 0;
angle = 0;
index = 0;
v_indoors = false;
data_x = ds_list_create();
data_y = ds_list_create();
data_z1 = ds_list_create();
data_z2 = ds_list_create();
data_xsize = ds_list_create();
data_ysize = ds_list_create();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Depth Update
depth = w3d_depth(x,y,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Interact
/// Open Storage
if ( active == true )
{
    if ( global.render_gui_page == "none" )
    {
    if ( mouse_x &gt; x - sprite_width/2 &amp;&amp; mouse_x &lt; x + sprite_width/2 &amp;&amp; mouse_y &gt; y - sprite_height/2 &amp;&amp; mouse_y &lt; y + sprite_height/2 )
    {
            if ( point_distance(x,y,obj_player.x,obj_player.y) &lt; real(global.item_data[#index,5]) )
            {
            selected = true;
            if ( global.tablet_mode == 0 ){
            if ( keyboard_check(obj_player.key_walk_main) or keyboard_check(obj_player.key_walk_alt) )
            {
            /*
            if ( mouse_check_button_pressed(mb_left) )
            {
                audio_play_sound(snd_click03,4,false);
                io_clear();
                v_gathering = false;
                global.render_gui_page = "inventory";
                global.render_characters = true;
                global.render_world_tiles = true;
                global.render_gui_1 = false;
                global.render_world_shadows = false;
                //global.storage_id = id;
                //global.storage_type = 29;
                //ds_grid_copy(global.c_inv_storage,c_inv);
                //ds_grid_copy(global.c_stack_storage,c_stack);
                inventory_ini_player();
                inventory_ini_storage(clamp(ds_grid_width(c_inv),1,8),clamp(ds_grid_height(c_inv),1,8),c_inv,c_stack);
            }*/
            if ( mouse_check_button_pressed(mb_right) )
            {
            var inst = instance_create(x,y,obj_item_dropped);
            inst.item_id = index;
            inst.item_stack = 1;
            instance_destroy();
            }
            }
            }/*else{
            var x_draw = x-view_xview[0];var y_draw = y-view_yview[0];
            if ( device_mouse_check_button_pressed(0,mb_left) &amp;&amp; point_distance(x_draw+48,y_draw-36,device_mouse_x_to_gui(0),device_mouse_y_to_gui(0)) &lt; sprite_width/2 )
            {
            var inst = instance_create(x,y,obj_item_dropped);
            inst.item_id = index;
            inst.item_stack = 1;
            instance_destroy();
            }
            }*/
        }
        else
        {selected = false;}
    }
    else
    {selected = false;}
    }
    else
    {
    if ( global.storage_id == id )
    {world_obj_update(id);}
    else
    {selected = false;}
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Render GUI For Usage
var x_draw = x-view_xview[0];
var y_draw = y-view_yview[0];

if ( selected == true ){
if ( keyboard_check(obj_player.key_walk_main) or keyboard_check(obj_player.key_walk_alt) )
{
// Set font and alignment
if ( global.tablet_mode == 0 ){draw_set_font(font_gulim_12)}else{draw_set_font(font_gulim_18)}
draw_set_halign(fa_center);
draw_set_valign(fa_middle);

// Draw prompts
mouse_frames += 0.025;
if ( mouse_frames &gt;= 2 )
{mouse_frames = 0;}
var sprite_set = spr_mouse_image;
draw_sprite_ext(sprite_set,mouse_frames,x_draw,y_draw-16,1,1,0,c_white,1);
draw_set_font(font_gulim_12);
draw_text_outline("Destroy",x_draw,y_draw+8,c_white,c_black);
}
else
{
// Set font and alignment
draw_set_font(font_gulim_12);
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
// Draw prompts
mouse_frames += 0.025;
if ( mouse_frames &gt;= 2 )
{mouse_frames = 0;}
if ( mouse_frames &lt; 1 )
{draw_text_outline(string(keyboard_get_str(obj_player.key_walk_main)),x_draw,y_draw,c_white,c_black);}
else
{draw_text_outline(string(keyboard_get_str(obj_player.key_walk_main)),x_draw,y_draw,c_dkgray,c_black);}
}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Render
//if ( active == true )
//{if ( v_indoors == obj_player.v_indoors ){
/*
if ( global.render_gui_page == "none" ){
if ( selected == true ){
draw_set_color(c_green);
draw_set_alpha(0.25);
draw_circle(x,y,sprite_width*2,false);
draw_set_alpha(1);
draw_set_color(c_white);}

draw_set_alpha(1);
draw_set_color(c_white);
if ( is_3d != 0 ){
var i = 0;var px = 0;var py = 0;var theta = degtorad(angle);
if ( !rot ){for(i=0;i&lt;ds_list_size(data_x);i++)
{w3d_draw_cube_ext(texture,texture,x+data_x[|i],y+data_y[|i],data_z1[|i],data_z2[|i],data_xsize[|i],data_ysize[|i]);}}else{
switch(angle){
case 0:{for(i=0;i&lt;ds_list_size(data_x);i++)
{w3d_draw_cube_ext(texture,texture,x+data_x[|i],y+data_y[|i],data_z1[|i],data_z2[|i],data_xsize[|i],data_ysize[|i]);}break;}
case 90:{for(i=0;i&lt;ds_list_size(data_x);i++)
{w3d_draw_cube_ext(texture,texture,x+data_x[|i],y-data_y[|i],data_z1[|i],data_z2[|i],data_ysize[|i],data_xsize[|i]);}break;}
case 180:{for(i=0;i&lt;ds_list_size(data_x);i++)
{w3d_draw_cube_ext(texture,texture,x-data_x[|i],y-data_y[|i],data_z1[|i],data_z2[|i],data_xsize[|i],data_ysize[|i]);}break;}
case 270:{for(i=0;i&lt;ds_list_size(data_x);i++)
{w3d_draw_cube_ext(texture,texture,x+data_x[|i],y-data_y[|i],data_z1[|i],data_z2[|i],data_ysize[|i],data_xsize[|i]);}break;}}}
}else
{w3d_draw_sprite(texture,0,x+data_x[|i],y+data_y[|i],data_z1[|i]);}

}
//}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
